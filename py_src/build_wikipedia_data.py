import json
import os
import re

import wikipediaapi
from utils import File, JSONFile, Log, TimeFormat

from election import get_election_wiki_page_name_list
from ents import get_electoral_district_wiki_page_name_list
from misc import get_misc_wiki_page_name_list
from party import get_party_wiki_page_name_list

log = Log('build_wikipedia_data')
SRI_LANKA_PAGE_PREFIX = '_(Sri_Lanka)'
SRI_LANKA_PAGES = [
    "New_Democratic_Front",
    "National_Congress",
]


def clean(x):
    x = x.replace('.', '. ')
    x = re.sub(r'\s+', ' ', x)
    return x


def get_wikipedia_summary_nocache(wiki_page_name):
    log.debug(f'Fetching: "{wiki_page_name}"')
    try:
        wiki = wikipediaapi.Wikipedia("lk_elections", "en")
        if wiki_page_name in SRI_LANKA_PAGES:
            wiki_page_name += SRI_LANKA_PAGE_PREFIX
        page = wiki.page(wiki_page_name)
        summary = page.summary
        log.debug('\t' + summary)
        return summary
    except Exception as e:
        log.error(f'Error fetching {wiki_page_name}: {e}')
        return ""


def get_wikipedia_summary(wiki_page_name):
    data_path = os.path.join(
        'py_src', 'wikipedia_cache', wiki_page_name + '.json'
    )
    data_file = JSONFile(data_path)
    if data_file.exists:
        data = data_file.read()
        return data['summary']

    summary = get_wikipedia_summary_nocache(wiki_page_name)
    data_file.write(dict(summary=summary))
    return summary


def main():
    var_name = 'WIKIPEDIA_SUMMRY_IDX'
    time_str = TimeFormat.TIME.formatNow
    lines = [
        '// Autogenerated by build_wikipedia_data.py',
        '// at ' + time_str,
        '',
        f'const {var_name} = ' + '{',
    ]

    wiki_page_name_list = (
        get_election_wiki_page_name_list()
        + get_electoral_district_wiki_page_name_list()
        + get_misc_wiki_page_name_list()
        + get_party_wiki_page_name_list()
    )
    for wiki_page_name in wiki_page_name_list:
        summary = clean(get_wikipedia_summary(wiki_page_name))
        lines.extend(
            [
                '',
                '  // ' + wiki_page_name,
                f'  "{wiki_page_name}": {json.dumps(summary)},',
            ]
        )

    lines.extend(
        [
            '',
            '};',
            '',
            f'export default {var_name};',
        ]
    )

    data_path = os.path.join('src', 'nonview', 'constants', f'{var_name}.js')
    File(data_path).write_lines(lines)
    log.info(f'Wrote {data_path}')


if __name__ == "__main__":
    main()
